{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\SupplierDashBoard\\\\frontend\\\\src\\\\components\\\\MonthlySales\\\\MonthlySalesGraph.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport LineChart from './LineChart';\nimport { UserData } from './Data';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonthlySalesGraph() {\n  _s();\n  const {\n    vendorId\n  } = useParams();\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [userData, setUserData] = useState({\n    labels: UserData.map(data => data.year),\n    datasets: [{\n      label: \"Users Gained\",\n      data: UserData.map(data => data.userGain),\n      backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n      borderColor: \"black\",\n      borderWidth: 2\n    }]\n  });\n  useEffect(() => {\n    fetch(`/orders/products/monthly/${vendorId}`).then(response => response.json()).then(data => {\n      setMonthlyData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [vendorId]);\n  function getMonthlySales(data) {\n    const monthlyTotals = {};\n    data.forEach(product => {\n      product.paymentDate.forEach(monthData => {\n        const monthName = Object.keys(monthData)[0];\n        const monthTotal = monthData[monthName];\n        if (monthlyTotals[monthName]) {\n          monthlyTotals[monthName] += monthTotal;\n        } else {\n          monthlyTotals[monthName] = monthTotal;\n        }\n      });\n    });\n    return monthlyTotals;\n  }\n\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        chartData: userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(MonthlySalesGraph, \"421/9DupitehoMcru6JxdLokDDc=\", false, function () {\n  return [useParams];\n});\n_c = MonthlySalesGraph;\nexport default MonthlySalesGraph;\nvar _c;\n$RefreshReg$(_c, \"MonthlySalesGraph\");","map":{"version":3,"names":["React","useState","useEffect","Line","LineChart","UserData","useParams","jsxDEV","_jsxDEV","MonthlySalesGraph","_s","vendorId","monthlyData","setMonthlyData","loading","setLoading","userData","setUserData","labels","map","data","year","datasets","label","userGain","backgroundColor","borderColor","borderWidth","fetch","then","response","json","catch","error","console","getMonthlySales","monthlyTotals","forEach","product","paymentDate","monthData","monthName","Object","keys","monthTotal","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","chartData","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/SupplierDashBoard/frontend/src/components/MonthlySales/MonthlySalesGraph.js"],"sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport LineChart from './LineChart';\r\nimport { UserData } from './Data';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction MonthlySalesGraph() {\r\n  const {vendorId} = useParams();\r\n  const [monthlyData, setMonthlyData]= useState([]);\r\n  const [loading,setLoading] =useState(true);\r\n  const [userData, setUserData] = useState({\r\n    labels: UserData.map((data) => data.year),\r\n    datasets: [\r\n      {\r\n        label: \"Users Gained\",\r\n        data: UserData.map((data) => data.userGain),\r\n        backgroundColor: [\r\n          \"rgba(75,192,192,1)\",\r\n          \"#ecf0f1\",\r\n          \"#50AF95\",\r\n          \"#f3ba2f\",\r\n          \"#2a71d0\",\r\n        ],\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(`/orders/products/monthly/${vendorId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMonthlyData(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, [vendorId]);\r\n\r\n  function getMonthlySales(data) {\r\n    const monthlyTotals = {};\r\n    \r\n    data.forEach((product) => {\r\n      product.paymentDate.forEach((monthData) => {\r\n        const monthName = Object.keys(monthData)[0];\r\n        const monthTotal = monthData[monthName];\r\n        \r\n        if (monthlyTotals[monthName]) {\r\n          monthlyTotals[monthName] += monthTotal;\r\n        } else {\r\n          monthlyTotals[monthName] = monthTotal;\r\n        }\r\n      });\r\n    });\r\n    \r\n    return monthlyTotals;\r\n  }\r\n\r\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <div style={{ width: 700 }}>\r\n        <table>\r\n          {/* Display the product table */}\r\n        </table>\r\n        <LineChart chartData={userData} />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthlySalesGraph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}