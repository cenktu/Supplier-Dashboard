{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\SupplierDashBoard\\\\frontend\\\\src\\\\components\\\\MonthlySales\\\\MonthlySalesGraph.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport LineChart from './LineChart';\nimport { UserData } from './Data';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonthlySalesGraph() {\n  _s();\n  const {\n    vendorId\n  } = useParams();\n  const [vendorName, setVendorName] = useState('');\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`/vendors/${vendorId}`).then(response => response.json()).then(data => {\n      if (data.status === 'success') {\n        setVendorName(data.data.vendor.name);\n      }\n    }).catch(error => {\n      console.error('Error fetching vendor data:', error);\n    });\n    fetch(`/orders/products/monthly/try/${vendorId}`).then(response => response.json()).then(data => {\n      setMonthlyData(data.data.paymentDate);\n      const fetchData = data;\n      setLoading(false);\n      console.log('payment date data :', fetchData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [vendorId]);\n  function getMonthlySales(data) {\n    const monthlyTotals = {};\n    data.forEach(product => {\n      for (const monthData of product.paymentDate) {\n        for (const month in monthData) {\n          if (monthlyTotals[month]) {\n            monthlyTotals[month] += monthData[month];\n          } else {\n            monthlyTotals[month] = monthData[month];\n          }\n        }\n      }\n    });\n\n    // Sort the months based on the desired order\n    const sortedMonthlyTotals = Object.fromEntries(Object.entries(monthlyTotals).sort((a, b) => desiredOrder.indexOf(a[0]) - desiredOrder.indexOf(b[0])));\n    return sortedMonthlyTotals;\n  }\n\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Last 3 Month Sales for Vendor: \", vendorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        monthlyTotals: getMonthlySales(monthlyData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MonthlySalesGraph, \"IcqVYjqHD4x7QofTTKsCt8eHJOY=\", false, function () {\n  return [useParams];\n});\n_c = MonthlySalesGraph;\nexport default MonthlySalesGraph;\nvar _c;\n$RefreshReg$(_c, \"MonthlySalesGraph\");","map":{"version":3,"names":["React","useState","useEffect","Line","LineChart","UserData","useParams","jsxDEV","_jsxDEV","MonthlySalesGraph","_s","vendorId","vendorName","setVendorName","monthlyData","setMonthlyData","loading","setLoading","fetch","then","response","json","data","status","vendor","name","catch","error","console","paymentDate","fetchData","log","getMonthlySales","monthlyTotals","forEach","product","monthData","month","sortedMonthlyTotals","Object","fromEntries","entries","sort","a","b","desiredOrder","indexOf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/SupplierDashBoard/frontend/src/components/MonthlySales/MonthlySalesGraph.js"],"sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport LineChart from './LineChart';\r\nimport { UserData } from './Data';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction MonthlySalesGraph() {\r\n  const {vendorId} = useParams();\r\n  const [vendorName, setVendorName] = useState('');\r\n  const [monthlyData, setMonthlyData]= useState([]);\r\n  const [loading,setLoading] =useState(true);\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch(`/vendors/${vendorId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === 'success') {\r\n          setVendorName(data.data.vendor.name);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching vendor data:', error);\r\n      });\r\n\r\n    fetch(`/orders/products/monthly/try/${vendorId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        \r\n        setMonthlyData(data.data.paymentDate);\r\n        const fetchData = data;\r\n        setLoading(false);\r\n        console.log('payment date data :',fetchData);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, [vendorId]);\r\n\r\n  function getMonthlySales(data) {\r\n    const monthlyTotals = {};\r\n    \r\n    data.forEach((product) => {\r\n      for (const monthData of product.paymentDate) {\r\n        for (const month in monthData) {\r\n          if (monthlyTotals[month]) {\r\n            monthlyTotals[month] += monthData[month];\r\n          } else {\r\n            monthlyTotals[month] = monthData[month];\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n\r\n    // Sort the months based on the desired order\r\n    const sortedMonthlyTotals = Object.fromEntries(\r\n      Object.entries(monthlyTotals).sort(\r\n        (a, b) => desiredOrder.indexOf(a[0]) - desiredOrder.indexOf(b[0])\r\n      )\r\n    );\r\n    return sortedMonthlyTotals;\r\n  }\r\n\r\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Last 3 Month Sales for Vendor: {vendorName}</h2>\r\n      {loading ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        <div style={{ width: 700 }}>\r\n          <table>\r\n            {/* Display the product table */}\r\n          </table>\r\n          <LineChart monthlyTotals={getMonthlySales(monthlyData)} />\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthlySalesGraph;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}