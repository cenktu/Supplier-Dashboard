{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\SupplierDashBoard\\\\frontend\\\\src\\\\components\\\\MonthlySales\\\\MonthlySalesGraph.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport LineChart from './LineChart';\nimport { UserData } from './Data';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonthlySalesGraph() {\n  _s();\n  const {\n    vendorId\n  } = useParams();\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`/orders/products/monthly/${vendorId}`).then(response => response.json()).then(data => {\n      setMonthlyData(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [vendorId]);\n  function getMonthlySales(data) {\n    const monthlySales = new Array(12).fill(0);\n    if (data && data.paymentDate) {\n      // Iterate through the keys (months) in data.paymentDate\n      Object.keys(data.paymentDate).forEach(month => {\n        // Map Turkish month names to month numbers (adjust as needed)\n        const monthMap = {\n          Ocak: 0,\n          Şubat: 1,\n          Mart: 2,\n          Nisan: 3,\n          Mayıs: 4,\n          Haziran: 5,\n          Temmuz: 6,\n          Ağustos: 7,\n          Eylül: 8,\n          Ekim: 9,\n          Kasım: 10,\n          Aralık: 11\n        };\n        const monthTotal = data.paymentDate[month];\n        const monthNumber = monthMap[month];\n        if (monthNumber !== undefined) {\n          monthlySales[monthNumber] += monthTotal;\n        }\n      });\n    }\n    return monthlySales;\n  }\n\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Sales for Vendor: \", vendorId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        monthlyTotals: getMonthlySales(monthlyData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(MonthlySalesGraph, \"Yxua5phlbnMu0sUcPSLBsKkaWhM=\", false, function () {\n  return [useParams];\n});\n_c = MonthlySalesGraph;\nexport default MonthlySalesGraph;\nvar _c;\n$RefreshReg$(_c, \"MonthlySalesGraph\");","map":{"version":3,"names":["React","useState","useEffect","Line","LineChart","UserData","useParams","jsxDEV","_jsxDEV","MonthlySalesGraph","_s","vendorId","monthlyData","setMonthlyData","loading","setLoading","fetch","then","response","json","data","catch","error","console","getMonthlySales","monthlySales","Array","fill","paymentDate","Object","keys","forEach","month","monthMap","Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık","monthTotal","monthNumber","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","monthlyTotals","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/SupplierDashBoard/frontend/src/components/MonthlySales/MonthlySalesGraph.js"],"sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport LineChart from './LineChart';\r\nimport { UserData } from './Data';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction MonthlySalesGraph() {\r\n  const {vendorId} = useParams();\r\n  const [monthlyData, setMonthlyData]= useState([]);\r\n  const [loading,setLoading] =useState(true);\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch(`/orders/products/monthly/${vendorId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMonthlyData(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, [vendorId]);\r\n\r\n  function getMonthlySales(data) {\r\n    const monthlySales = new Array(12).fill(0);\r\n\r\n  if (data && data.paymentDate) {\r\n    // Iterate through the keys (months) in data.paymentDate\r\n    Object.keys(data.paymentDate).forEach((month) => {\r\n      // Map Turkish month names to month numbers (adjust as needed)\r\n      const monthMap = {\r\n        Ocak: 0,\r\n        Şubat: 1,\r\n        Mart: 2,\r\n        Nisan: 3,\r\n        Mayıs: 4,\r\n        Haziran: 5,\r\n        Temmuz: 6,\r\n        Ağustos: 7,\r\n        Eylül: 8,\r\n        Ekim: 9,\r\n        Kasım: 10,\r\n        Aralık: 11,\r\n      };\r\n\r\n      const monthTotal = data.paymentDate[month];\r\n      const monthNumber = monthMap[month];\r\n\r\n      if (monthNumber !== undefined) {\r\n        monthlySales[monthNumber] += monthTotal;\r\n      }\r\n    });\r\n  }\r\n    \r\n    return monthlySales;\r\n  }\r\n\r\n  // IF YOU SEE THIS COMMENT: I HAVE GOOD EYESIGHT\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Total Sales for Vendor: {vendorId}</h2>\r\n      {loading ? (\r\n        <p>Loading data...</p>\r\n      ) : (\r\n        <div style={{ width: 700 }}>\r\n          <table>\r\n            {/* Display the product table */}\r\n          </table>\r\n          <LineChart monthlyTotals={getMonthlySales(monthlyData)} />\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonthlySalesGraph;"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAACC;EAAQ,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAEZ,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACa,OAAO,EAACC,UAAU,CAAC,GAAEd,QAAQ,CAAC,IAAI,CAAC;EAG1CC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAE,4BAA2BL,QAAS,EAAC,CAAC,CAC1CM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,cAAc,CAACO,IAAI,CAAC;MACpBL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,SAASa,eAAeA,CAACJ,IAAI,EAAE;IAC7B,MAAMK,YAAY,GAAG,IAAIC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAE5C,IAAIP,IAAI,IAAIA,IAAI,CAACQ,WAAW,EAAE;MAC5B;MACAC,MAAM,CAACC,IAAI,CAACV,IAAI,CAACQ,WAAW,CAAC,CAACG,OAAO,CAAEC,KAAK,IAAK;QAC/C;QACA,MAAMC,QAAQ,GAAG;UACfC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE,CAAC;UACVC,MAAM,EAAE,CAAC;UACTC,OAAO,EAAE,CAAC;UACVC,KAAK,EAAE,CAAC;UACRC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE;QACV,CAAC;QAED,MAAMC,UAAU,GAAG1B,IAAI,CAACQ,WAAW,CAACI,KAAK,CAAC;QAC1C,MAAMe,WAAW,GAAGd,QAAQ,CAACD,KAAK,CAAC;QAEnC,IAAIe,WAAW,KAAKC,SAAS,EAAE;UAC7BvB,YAAY,CAACsB,WAAW,CAAC,IAAID,UAAU;QACzC;MACF,CAAC,CAAC;IACJ;IAEE,OAAOrB,YAAY;EACrB;;EAEA;;EAEA,oBACEjB,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1C,OAAA;MAAA0C,QAAA,GAAI,0BAAwB,EAACvC,QAAQ;IAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1CxC,OAAO,gBACNN,OAAA;MAAA0C,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtB9C,OAAA;MAAK+C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAI,CAAE;MAAAN,QAAA,gBACzB1C,OAAA;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEO,CAAC,eACR9C,OAAA,CAACJ,SAAS;QAACqD,aAAa,EAAEjC,eAAe,CAACZ,WAAW;MAAE;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV;AAAC5C,EAAA,CAtEQD,iBAAiB;EAAA,QACLH,SAAS;AAAA;AAAAoD,EAAA,GADrBjD,iBAAiB;AAwE1B,eAAeA,iBAAiB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}